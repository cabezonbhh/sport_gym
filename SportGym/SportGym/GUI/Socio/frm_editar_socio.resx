<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        W8paWloRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1vsW1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/XFxcXgAAAABdXV0WW1tb/VxcXEVdXV0WW1tbeFtb
        W/9bW1v/W1tb/1tbW8xVVVUSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW/FbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1uoAAAAAAAAAABbW1vIW1tb61tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1xcXM5eXl4TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbu1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW+9mZmYFAAAAAFlZ
        WU1bW1v7W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW9BZWVkUAAAAAAAAAAAAAAAAAAAAAAAA
        AABaWlozW1tb91tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1xc
        XGQAAAAAAAAAAFxcXFNbW1v6W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW9JdXV0WAAAAAAAA
        AAAAAAAAAAAAAAAAAABcXFxOW1tb9FtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb9l1dXUIAAAAAAAAAAFtbW1FbW1v5W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W9RZWVkXAAAAAAAAAAAAAAAAAAAAAAAAAABcXFwnW1tbwVtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb9VpaWkQAAAAAAAAAAFxcXE5bW1v5W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb4F1dXSFVVVUMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcVltbW+FbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb9ltbW0YAAAAAAAAAAFtbW0xaWlr4W1tb/1tb
        W/9bW1v/W1tb/1tbW+JXV1cjW1tbmFxcXM5gYGAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVVVCVtb
        W2VbW1vSW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb91xcXEgAAAAAAAAAAFpa
        WkpbW1v3W1tb/1tbW/9bW1viV1dXI1tbW5dbW1v/WlpacVtbWy1VVVUDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABcXFxAW1tbzVtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1u5XV1dNwAA
        AAAAAAAAAAAAAFxcXEhbW1v3W1tb41xcXCRbW1uVW1tb/1tbW3NaWlpBW1tb9VtbW4cAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWFgdW1tb/ltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/15e
        Xh4AAAAAAAAAAAAAAAAAAAAAAAAAAFtbW0NaWlolW1tblFtbW/9cXFx1XFxcQFtbW/VbW1v/W1tbxAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFbW1v0W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/WFhYGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWDFbW1v5W1tbdlxcXEBbW1v0W1tb/1tb
        W/paWlpKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpaSltbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1tfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdXVyNZWVk/W1tb9Ftb
        W/9bW1v7W1tbVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWh9bW1vrW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/JbW1sqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxc
        XDJbW1vlW1tb81xcXFMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpavVtb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1xcXNGAgIACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFVVVQNVVVUGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpa
        Wj5bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW1cAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXFxcwFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb1gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFlZWRRbW1v7W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/Xl5eJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWlpaY1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1t5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFyIW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW58AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxcXKRbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbrVtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbW1uYW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW64AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtb
        W2hbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/XFxcfQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWFhYGltbW/lbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/5ZWVkrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAW1tblFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tbqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZmYKW1tbyltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW9daWloRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiYmINW1tbpVtbW/5bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1uxVVVVEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbLVtb
        W4ZbW1u8W1tbzFtbW79bW1uKXV1dNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP4Of//gBg//gAZj/wAHcf8AB3D/AAMAfwADgD+AA8AfwAHgD+AA
        8A/4AHgT/gA8J/+APkz/wH+Y/8B/sf/Af+P/gD/n/wAf//8AH//+AA///gAP//4AD//8AAf//AAH//wA
        B//8AAf//gAP//4AD//+AA///wAf//+AP///4P//
</value>
  </data>
</root>